-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.address
(
    id bigserial Primary key,
    address character varying(50),
    city character varying(30),
    country character varying(30),
    user_id bigint
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigserial Primary key,
    username character varying(30),
    password character varying(50),
    phone character varying(20),
    email character varying(30),
    first_name character varying(30),
    last_name character varying(30),
    type user_type,
    UNIQUE (email),
    UNIQUE (phone)
);

CREATE TABLE IF NOT EXISTS public.brand
(
    id serial NOT NULL,
    name character varying(50),
    PRIMARY KEY (id),
    UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.product
(
    id bigserial NOT NULL,
    name character varying(50) NOT NULL,
    price integer,
    brand_id integer,
    category_id integer,
    average_rating smallint,
    PRIMARY KEY (id),
    UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.review
(
    id bigserial,
    rating smallint,
    titile character varying(50),
    comment character varying(2000),
    product_id bigint,
    user_id bigint,
    date timestamp without time zone,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.section
(
    id smallserial NOT NULL,
    name character varying(50),
    PRIMARY KEY (id),
    CONSTRAINT "namesec" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.category
(
    id serial NOT NULL,
    name character varying(40),
    parent_category_id integer,
    CONSTRAINT parent_category_id PRIMARY KEY (id),
    CONSTRAINT "nameсat" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."order"
(
    id bigserial NOT NULL,
    "status" status,
    user_id bigint,
    price integer,
    address_id bigint,
    created_at timestamp without time zone,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.section_to_category
(
    section_id smallint,
    category_id integer,
    CONSTRAINT id PRIMARY KEY (section_id, category_id)
        INCLUDE(section_id, category_id)
);

CREATE TABLE IF NOT EXISTS public.product_variant
(
    id bigserial NOT NULL,
    size_id integer,
    color_id integer,
    product_id bigint,
    quantity integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.size
(
    id serial NOT NULL,
    name character varying(50),
    PRIMARY KEY (id),
    CONSTRAINT "names" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.color
(
    id serial NOT NULL,
    name character varying(50),
    PRIMARY KEY (id),
    CONSTRAINT "nameс" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.cart_items
(
    "product-variant_id" bigint,
    user_id integer,
    quantity integer,
    PRIMARY KEY ("product-variant_id", user_id)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    product_variant_id bigint,
    order_id bigint,
    quantity integer,
    PRIMARY KEY (product_variant_id, order_id)
);

CREATE TABLE IF NOT EXISTS public.order_transactions
(
    order_id bigint,
    status status,
    updated_at timestamp without time zone,
    PRIMARY KEY (order_id)
);

ALTER TABLE IF EXISTS public.address
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "brand_idс" FOREIGN KEY (brand_id)
    REFERENCES public.brand (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "category_idс" FOREIGN KEY (category_id)
    REFERENCES public.category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.review
    ADD CONSTRAINT "product_idс" FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.review
    ADD CONSTRAINT "user_idс" FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.category
    ADD CONSTRAINT "parent_category_idс" FOREIGN KEY (parent_category_id)
    REFERENCES public.category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT "user_idс" FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT "address_idс" FOREIGN KEY (address_id)
    REFERENCES public.address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.section_to_category
    ADD CONSTRAINT "section_idс" FOREIGN KEY (section_id)
    REFERENCES public.section (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.section_to_category
    ADD CONSTRAINT "category_idс" FOREIGN KEY (category_id)
    REFERENCES public.category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_variant
    ADD CONSTRAINT "product_idс" FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_variant
    ADD CONSTRAINT "color_idс" FOREIGN KEY (color_id)
    REFERENCES public.color (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_variant
    ADD CONSTRAINT "size_idс" FOREIGN KEY (size_id)
    REFERENCES public.size (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_items
    ADD CONSTRAINT "product_variant_idс" FOREIGN KEY ("product-variant_id")
    REFERENCES public.product_variant (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_items
    ADD CONSTRAINT "user_idс" FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT "product_variant_idс" FOREIGN KEY (product_variant_id)
    REFERENCES public.product_variant (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT "order_idс" FOREIGN KEY (order_id)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_transactions
    ADD CONSTRAINT "order_idс" FOREIGN KEY (order_id)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;